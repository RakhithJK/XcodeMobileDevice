//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AppKit/NSTextFieldCell.h>

@class DVTBindingHelper, NSArray, NSColor, NSDictionary, NSFont, NSImage, NSProgressIndicator, NSString;

@interface DVTImageAndTextCell : NSTextFieldCell
{
    DVTBindingHelper *_bindingHelper;
    NSArray *_statusCategoryNames;
    NSDictionary *_statusCellsByCategoryName;
    NSFont *_subtitleFont;
    NSImage *_image;
    NSProgressIndicator *_progressIndicator;
    unsigned long long _progressIndicatorStyle;
    NSString *_subtitle;
    id _attributedStringValue;
    long long _leftEdgeSpacing;
    long long _subtitleSpacing;
    struct CGSize _baseImageSize;
    double _layoutHeight;
    long long _titleAndSubTitleLeftEdgeSpacing;
    long long _progressValue;
    int _emphasizeMarkerStyle;
    unsigned long long _imageScaling;
    int _subtitleLayout;
    BOOL _drawsEmphasizeMarker;
    BOOL _showsStatusItems;
    BOOL _alwaysReserveSpaceForStatusItems;
    NSColor *_inactiveTitleTextColor;
    double _statusItemEdgeMargin;
}

+ (void)initialize;
- (void).cxx_destruct;
- (struct CGSize)_attributedStringValueSize;
- (id)_attributedStringWithString:(id)arg1 font:(id)arg2 foregroundColor:(id)arg3;
- (BOOL)_checkStatusCellHitForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 withAction:(CDUnknownBlockType)arg4;
- (BOOL)_controlViewHasFocusOrIsSourceList;
- (void)_dvt_commonInit;
- (struct CGSize)_imageSizeForLayoutFrame:(struct CGRect)arg1;
- (struct CGRect)_layoutFrameForCellFrame:(struct CGRect)arg1;
- (struct CGSize)_scaledImageSize:(struct CGSize)arg1 forTargetHeight:(double)arg2;
- (void)_setupProgressIndicatorInView:(id)arg1;
- (id)_statusCellsByCategoryName;
- (struct CGRect)_statusCellsRectsForBounds:(struct CGRect)arg1 rects:(id)arg2;
- (struct CGRect)_textFrameForSelectingOrEditingWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
@property BOOL alwaysReserveSpaceForStatusItems; // @synthesize alwaysReserveSpaceForStatusItems=_alwaysReserveSpaceForStatusItems;
- (id)ancestorTableView;
- (id)attributedStringValue;
@property struct CGSize baseImageSize; // @synthesize baseImageSize=_baseImageSize;
- (struct CGSize)cellSize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)drawEmphasizeMarkerWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawProgressIndicatorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawStatusWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawSubtitleWithCellFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
@property BOOL drawsEmphasizeMarker; // @synthesize drawsEmphasizeMarker=_drawsEmphasizeMarker;
- (id)dvtExtraBindings;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
@property int emphasizeMarkerStyle; // @synthesize emphasizeMarkerStyle=_emphasizeMarkerStyle;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)fullLineTitleRectForBounds:(struct CGRect)arg1;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
@property(retain) NSImage *image; // @synthesize image=_image;
- (struct CGRect)imageRectForBounds:(struct CGRect)arg1;
@property unsigned long long imageScaling; // @synthesize imageScaling=_imageScaling;
@property(copy, nonatomic) NSColor *inactiveTitleTextColor; // @synthesize inactiveTitleTextColor=_inactiveTitleTextColor;
- (id)init;
- (id)initImageCell:(id)arg1;
- (id)initTextCell:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)invalidateAttributedStringValue;
@property double layoutHeight; // @synthesize layoutHeight=_layoutHeight;
@property long long leftEdgeSpacing; // @synthesize leftEdgeSpacing=_leftEdgeSpacing;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
@property(retain) NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
- (struct CGRect)progressIndicatorRectForBounds:(struct CGRect)arg1;
@property unsigned long long progressIndicatorStyle; // @synthesize progressIndicatorStyle=_progressIndicatorStyle;
@property long long progressValue; // @synthesize progressValue=_progressValue;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)setAttributedStringValue:(id)arg1;
- (void)setBackgroundStyle:(long long)arg1;
- (void)setFont:(id)arg1;
- (void)setHighlighted:(BOOL)arg1;
- (void)setProgress:(id)arg1;
@property BOOL showsStatusItems; // @synthesize showsStatusItems=_showsStatusItems;
@property(copy) NSArray *statusCategoryNames; // @synthesize statusCategoryNames=_statusCategoryNames;
- (void)setStatusItemCells:(id)arg1 forCategory:(id)arg2;
@property double statusItemEdgeMargin; // @synthesize statusItemEdgeMargin=_statusItemEdgeMargin;
@property(copy) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(copy, nonatomic) NSFont *subtitleFont; // @synthesize subtitleFont=_subtitleFont;
@property int subtitleLayout; // @synthesize subtitleLayout=_subtitleLayout;
@property long long subtitleSpacing; // @synthesize subtitleSpacing=_subtitleSpacing;
@property(copy) NSString *title; // @dynamic title;
@property long long titleAndSubTitleLeftEdgeSpacing; // @synthesize titleAndSubTitleLeftEdgeSpacing=_titleAndSubTitleLeftEdgeSpacing;
- (id)statusCellsRectsForBounds:(struct CGRect)arg1;
- (id)statusItemCellsForCategory:(id)arg1;
- (struct CGRect)statusRectForBounds:(struct CGRect)arg1;
- (id)subtitleAttributedStringValue;
- (struct CGRect)subtitleBoundingRectWithSize:(struct CGSize)arg1 options:(long long)arg2;
- (struct CGRect)subtitleRectForBounds:(struct CGRect)arg1;
@property(readonly, copy, nonatomic) NSColor *subtitleTextColor;
- (id)titleDropShadow;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
@property(readonly, copy) NSColor *titleTextColor;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (void)updateBoundTitle;

@end

