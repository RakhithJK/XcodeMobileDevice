//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <DVTKit/DVTLayerHostingView.h>

#import <IDEKit/DVTInvalidation-Protocol.h>
#import <IDEKit/DVTWindowActivationStateObserver-Protocol.h>
#import <IDEKit/IDEActivityViewDataConsumer-Protocol.h>

@class CALayer, DVTObservingToken, DVTStackBacktrace, IDEActivityMultiActionIndicatorLayer, IDEActivityPopUpWindowController, IDEActivityReport, IDEActivityReportLayer, IDEActivityStatusContainerLayer, IDEActivityViewDataSource, IDEWorkspaceWindowController, NSMapTable, NSString, NSView;
@protocol DVTCancellable;

@interface IDEActivityView : DVTLayerHostingView <IDEActivityViewDataConsumer, DVTWindowActivationStateObserver, DVTInvalidation>
{
    NSView *_layerView;
    IDEActivityMultiActionIndicatorLayer *_multiActionIndicatorLayer;
    IDEActivityStatusContainerLayer *_issuesContainerLayer;
    IDEActivityReportLayer *_currentActivityReportLayer;
    CALayer *_reportLayerContainerLayer;
    CALayer *_backgroundLayer;
    CALayer *_reportLayerTree;
    IDEActivityPopUpWindowController *_popUpController;
    DVTObservingToken *_popUpControllerIsValidToken;
    IDEWorkspaceWindowController *_workspaceWindowController;
    NSMapTable *_strongReportsToStrongReportLayers;
    IDEActivityViewDataSource *_dataSource;
    id <DVTCancellable> _activationStateObserverToken;
    DVTObservingToken *_visibleStatusCategoriesObservingToken;
    DVTObservingToken *_indeterminateReportInProgressObservingToken;
    struct {
        unsigned int setup:1;
        unsigned int displayedReportIsCompleted:1;
        unsigned int forcedDisplayedReportUpdateIsScheduled:1;
        unsigned int _reserved:5;
    } _flags;
}

+ (struct CGSize)defaultSizeForToolbarDisplayMode:(unsigned long long)arg1 sizeMode:(unsigned long long)arg2;
+ (void)initialize;
+ (struct CGSize)scaledSizeWithMaximumWidth:(double)arg1 forToolbarDisplayMode:(unsigned long long)arg2 sizeMode:(unsigned long long)arg3;
- (void).cxx_destruct;
- (id)_backgroundLayer;
- (id)_buildAllStatusLayer;
- (id)_buildMultiActionIndicatorLayer;
- (id)_buildReportLayerTree;
- (void)_updateCurrentActivityReportForWindowActivationState;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)activityReportLayerForReport:(id)arg1;
- (void)activityReportListDidChangeForActivityViewDataSource:(id)arg1;
- (id)activityReportManager;
- (void)activityReportManagerDidInvalidateForActivityViewDataSource:(id)arg1;
- (id)activityReports;
- (void)activityViewCommonInit;
- (void)activityViewDataSource:(id)arg1 activityReportDidComplete:(id)arg2;
- (void)activityViewDataSource:(id)arg1 displayDelayTimeWasMetForActivityReport:(id)arg2;
- (void)activityViewDataSource:(id)arg1 issueCountDidChangeForIssueCategory:(id)arg2;
- (void)activityViewDataSource:(id)arg1 minimumDisplayTimeWasMetForActivityReport:(id)arg2;
- (void)activityViewDataSource:(id)arg1 workspaceRepresentingTypeStringDidChangeTo:(id)arg2;
- (void)cancelDisplayedReport:(id)arg1;
- (void)chooseAndDisplayNextActivityReportAfterChangeInReports;
- (void)chooseAndDisplayNextActivityReportAfterIdlePreDelay;
- (void)chooseAndDisplayNextActivityReportAfterMinimumTimeExpiredOrDelayExpired;
- (void)chooseAndDisplayNextActivityReportAfterReportCompleted;
- (id)clickableLayerAtPoint:(struct CGPoint)arg1;
@property struct CGSize contentSize;
- (void)delayedSetDisplayedReport:(id)arg1;
@property(readonly) IDEActivityReport *displayedReport;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct CGRect)insetReportLayerBounds;
- (struct CGRect)insetRootLayerBounds;
- (void)makeSureIssuesLayerIsVisible;
- (id)nextActivityReportToDisplay;
- (void)openActivityPopUp;
- (void)openLogNavigator;
- (id)orderedActivityReports;
- (void)primitiveInvalidate;
- (void)scheduleForcedDisplayedReportUpdate;
- (void)setActivityReportLayer:(id)arg1 forReport:(id)arg2;
- (void)setDisplayedReport:(id)arg1;
@property(retain, nonatomic) IDEWorkspaceWindowController *workspaceWindowController; // @synthesize workspaceWindowController=_workspaceWindowController;
- (void)setup;
- (void)setupLayers;
- (void)setupOrTearDown;
- (void)sizeToFitToolbarDisplayMode:(unsigned long long)arg1 sizeMode:(unsigned long long)arg2;
- (void)stopObservingActivityReports;
- (void)tearDown;
- (void)teardownLayers;
- (void)tryToDisplayReport:(id)arg1;
- (void)unschedulePendingForcedDisplayedReportUpdate;
- (void)updateActionIndicators;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)window:(id)arg1 didChangeActivationState:(long long)arg2;
- (id)workspace;
- (id)workspaceDocument;
- (id)workspaceTabController;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

