//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <GPUTools/DYCaptureStore-Protocol.h>

@class NSMutableData, NSMutableDictionary, NSString, NSURL;

@interface DYCaptureArchive : NSObject <DYCaptureStore>
{
    NSURL *_url;
    struct __CFUUID *_uuid;
    unsigned long long _options;
    CDStruct_ac07b3a8 _header;
    CDStruct_32a7f38a *_hash_table;
    CDStruct_fa775e3a *_file_table;
    CDStruct_f6a177db *_name_table;
    unsigned int _file_table_capacity;
    unsigned int _name_table_capacity;
    void *_string_table_storage;
    unsigned long long _string_table_capacity;
    unsigned long long *_string_table_offsets;
    id *_string_table_nscache;
    NSMutableDictionary *_aliasCreationMap;
    void *_store_write_buffer;
    void *_store_write_ptr;
    NSMutableDictionary *_metadata;
    NSMutableData *_filename_buffer;
    void *_read_buffer;
    long long _read_buffer_capacity;
    struct dispatch_queue_s *_write_queue;
    struct dispatch_group_s *_add_group;
    long long _backingStoreSize;
    long long _backingStoreWritePosition;
    int _backingStoreFD;
    unsigned int _open_file_count;
    BOOL _modified;
    BOOL _deleteOnClose;
}

+ (BOOL)accessInstanceVariablesDirectly;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (unsigned long long)contextFromFilename:(id)arg1;
+ (id)coreArchiveBundleFilesPredicate;
+ (id)createArchiveInTemporaryDirectory:(id *)arg1;
+ (id)createArchiveInTemporaryDirectoryWithName:(id)arg1 deleteOnClose:(BOOL)arg2 error:(id *)arg3;
+ (id)createArchiveInTemporaryDirectoryWithName:(id)arg1 error:(id *)arg2;
+ (id)internalFilenamePredicate;
+ (BOOL)isFunctionStreamFilename:(id)arg1;
+ (BOOL)isInternalFilename:(id)arg1;
+ (BOOL)isNotSpecialFilename:(id)arg1;
+ (id)standardFunctionStreamFilenamePredicate;
+ (id)standardFunctionStreamFilenamePrefixes;
- (BOOL)_createNewArchiveAtPath:(id)arg1 error:(id *)arg2;
- (unsigned int)_createNewFileEntry;
- (unsigned int)_createNewHashEntry:(const char *)arg1 didGrowTable:(char *)arg2;
- (unsigned int)_createNewNameEntry;
- (void)_fileObjectDidDeallocate;
- (void)_fileObjectDidInitialize;
- (CDStruct_fa775e3a *)_fileTable;
- (void)_fillStringTableNSCacheForRange:(struct _NSRange)arg1;
- (unsigned int)_findHashEntry:(const char *)arg1;
- (BOOL)_flushWriteBuffer:(id *)arg1;
- (char *)_getCFilename:(id)arg1 outSize:(unsigned long long *)arg2 error:(id *)arg3;
- (void)_growHashTable;
- (CDStruct_32a7f38a *)_hashTable;
- (CDStruct_ac07b3a8 *)_header;
- (BOOL)_loadArchiveAtPath:(id)arg1 error:(id *)arg2;
- (CDStruct_f6a177db *)_nameTable;
- (BOOL)_performAddAlias:(id)arg1 targetting:(id)arg2 error:(id *)arg3;
- (unsigned int)_performAddFileWithName:(id)arg1 dataSize:(unsigned int)arg2 error:(id *)arg3;
- (unsigned int)_performAddFileWithName:(id)arg1 dataSize:(unsigned int)arg2 withFlags:(unsigned int)arg3 error:(id *)arg4;
- (BOOL)_performCommit:(id *)arg1;
- (void)_performEmptyStringTableNSCache;
- (BOOL)_performFinalizeAddFileAtPosition:(unsigned int)arg1 name:(id)arg2 data:(id)arg3 error:(id *)arg4;
- (BOOL)_performReplaceDataOfFile:(id)arg1 withData:(id)arg2 error:(id *)arg3;
- (id)_readRawDataForFilePosition:(unsigned int)arg1 error:(id *)arg2;
- (unsigned long long)_reserveStringStorageSize:(unsigned long long)arg1;
- (id)_resolveCFilename:(const char *)arg1 error:(id *)arg2;
- (int)_storeFileDescriptor;
- (unsigned long long *)_stringTableOffsets;
- (void *)_stringTableStorage;
- (void)_swapFileTable;
- (void)_swapHashTable;
- (void)_swapNameTable;
- (long long)_writeBufferToBackingStore:(const void *)arg1 size:(long long)arg2 error:(id *)arg3;
- (BOOL)_writeIndexInPath:(id)arg1 error:(id *)arg2;
- (BOOL)_writeMetadataInPath:(id)arg1 error:(id *)arg2;
- (BOOL)acceptCaptureVisitor:(id)arg1;
- (BOOL)addAlias:(id)arg1 forName:(id)arg2 options:(id)arg3 error:(id *)arg4;
- (BOOL)addAlias:(id)arg1 forName:(id)arg2 options:(id)arg3 error:(id *)arg4 waitUntilDone:(BOOL)arg5;
- (BOOL)addCaptureFile:(id)arg1 options:(id)arg2 error:(id *)arg3 waitUntilDone:(BOOL)arg4;
- (BOOL)addFileWithName:(id)arg1 data:(id)arg2 options:(id)arg3 error:(id *)arg4;
- (BOOL)addFileWithName:(id)arg1 data:(id)arg2 options:(id)arg3 error:(id *)arg4 waitUntilDone:(BOOL)arg5;
- (BOOL)addFilesFromArchive:(id)arg1 error:(id *)arg2 passingTest:(CDUnknownBlockType)arg3;
- (BOOL)addTempFileWithName:(id)arg1 options:(id)arg2 fromLocation:(id)arg3 error:(id *)arg4;
- (BOOL)adjunctFileExistsForFilename:(id)arg1 error:(id *)arg2;
- (void *)allocateAndReadDataForFilenameBuffer:(const char *)arg1 outSize:(unsigned long long *)arg2 error:(id *)arg3;
- (void)close;
- (BOOL)commit:(id *)arg1;
- (BOOL)commitForExport:(id *)arg1;
- (id)copyAdjunctDataForFilename:(id)arg1 error:(id *)arg2;
- (id)copyDataForFilePosition:(unsigned long long)arg1 error:(id *)arg2;
- (id)copyDataForFilename:(id)arg1 error:(id *)arg2;
- (id)copyDataForFilenameBuffer:(const char *)arg1 error:(id *)arg2;
- (unsigned long long)countOfFilenames;
- (void)dealloc;
@property(nonatomic) BOOL deleteOnClose; // @synthesize deleteOnClose=_deleteOnClose;
- (void)discardAndClose;
- (BOOL)fileExistsForFilename:(id)arg1 error:(id *)arg2;
- (BOOL)fileExistsForFilenameBuffer:(const char *)arg1 error:(id *)arg2;
- (id)filenamesAtIndexes:(id)arg1;
- (id)filenamesWithPredicate:(id)arg1 error:(id *)arg2;
- (id)filenamesWithPrefix:(id)arg1 error:(id *)arg2;
- (id)getFilenameForFilePosition:(unsigned long long)arg1 error:(id *)arg2;
- (void)getFilenames:(id *)arg1 range:(struct _NSRange)arg2;
- (BOOL)getInfo:(CDStruct_61ea625d *)arg1 forFilePosition:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)getInfo:(CDStruct_61ea625d *)arg1 forFilename:(id)arg2 error:(id *)arg3;
- (BOOL)getInfo:(CDStruct_61ea625d *)arg1 forFilenameBuffer:(const char *)arg2 error:(id *)arg3;
- (vector_cfeb9b06)getSortedFilePositionsForDataCaching;
- (id)init;
- (id)initWithURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
@property(readonly, nonatomic, getter=isClosed) BOOL closed;
@property(readonly, nonatomic, getter=isReadOnly) BOOL readOnly;
- (id)metadataValueForKey:(id)arg1;
- (id)objectInFilenamesAtIndex:(unsigned long long)arg1;
- (id)openFileWithFilename:(id)arg1 error:(id *)arg2;
@property(readonly, retain, nonatomic) NSString *path;
- (long long)readDataForFilePosition:(unsigned long long)arg1 buffer:(void *)arg2 size:(unsigned long long)arg3 error:(id *)arg4;
- (long long)readDataForFilename:(id)arg1 buffer:(void *)arg2 size:(unsigned long long)arg3 error:(id *)arg4;
- (long long)readDataForFilenameBuffer:(const char *)arg1 buffer:(void *)arg2 size:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)replaceDataOfFile:(id)arg1 withData:(id)arg2 error:(id *)arg3;
- (id)resolveFilename:(id)arg1 error:(id *)arg2;
- (void)setMetadataFromArchive:(id)arg1;
- (BOOL)setMetadataValue:(id)arg1 forKey:(id)arg2 error:(id *)arg3;
- (void)setTargetQueue:(struct dispatch_queue_s *)arg1;
- (BOOL)storeAdjunctData:(id)arg1 filename:(id)arg2 error:(id *)arg3;
- (BOOL)updateDataReferenceCounts:(id)arg1 error:(id *)arg2;
@property(readonly, retain, nonatomic) NSURL *url;
@property(readonly, nonatomic) struct __CFUUID *uuid; // @synthesize uuid=_uuid;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

