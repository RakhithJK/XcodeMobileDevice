//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <IDEFoundation/IDESchemeAction.h>

@class DVTNotificationToken, DVTObservingToken, IDESchemeBuildableReference, NSArray, NSDictionary, NSMutableArray, NSString;

@interface IDETestSchemeAction : IDESchemeAction
{
    NSMutableArray *_testableReferences;
    NSMutableArray *_loadingTestableReferences;
    NSMutableArray *_commandLineArgumentEntries;
    NSMutableArray *_environmentVariableEntries;
    BOOL _codeCoverageEnabled;
    DVTObservingToken *_testablesObservingToken;
    DVTObservingToken *_skippedTestsObservingToken;
    DVTObservingToken *_workspaceRunnableProductsToken;
    DVTNotificationToken *_buildablesToken;
    NSArray *_hostBuildableReferences;
    IDESchemeBuildableReference *_testBuildableReferenceToUseForMacroExpansion;
    BOOL _shouldUseLaunchSchemeArgsEnv;
    BOOL _mallocStackLoggingSelected;
    BOOL _enableAddressSanitizer;
    BOOL _enableThreadSanitizer;
    unsigned int _debugProcessAsUID;
    NSString *_selectedDebuggerIdentifier;
    NSString *_selectedLauncherIdentifier;
    NSString *_selectedMallocStackLoggingType;
    NSDictionary *_additionalOptionEntriesDict;
    NSString *_selectedMallocStackLoggingTypeTooltip;
    NSString *_debugAsWhichUser;
}

+ (void)forceCodeCoverageEnabledTo:(BOOL)arg1;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingBuildableReferenceToUseForMacroExpansion;
+ (id)keyPathsForValuesAffectingDebugProcessAsUID;
+ (id)keyPathsForValuesAffectingDoesNonActionWork;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (id)keyPathsForValuesAffectingTestBuildableReferences;
- (void).cxx_destruct;
- (id)_additionalOptionEntries;
- (id)_additionalOptions;
- (void)_commonInit;
- (id)_createAdditionalOptionsDict;
- (void)_disableTestOrTestable:(id)arg1;
- (void)_enableTestOrTestable:(id)arg1;
- (id)_expandMacrosInString:(id)arg1 forBuildParameters:(id)arg2;
- (BOOL)_isEnabledTest:(id)arg1 testableReference:(id)arg2;
- (BOOL)_isTestEditable:(id)arg1 testableReference:(id)arg2;
- (void)_modifyEnvironmentForMallocStackLogging:(id)arg1;
- (void)_postEnabledStateNotification;
- (void)_setSelectedMallocStackLoggingType:(id)arg1;
- (id)_testableReferenceForTestable:(id)arg1;
- (void)_updateSelectedMallocStackTooltip:(id)arg1;
- (void)_updateTestActionBuildableToUseForMacroExpansion;
- (void)addAdditionalOptions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addCommandLineArguments:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addEnvironmentVariables:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addMacroExpansion:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addTestables:(id)arg1 fromXMLUnarchiver:(id)arg2;
@property(readonly) NSDictionary *additionalOptionEntriesDict; // @synthesize additionalOptionEntriesDict=_additionalOptionEntriesDict;
@property(readonly) NSArray *availableMallocStackLoggingTypes;
- (id)buildableReferenceToUseForMacroExpansion;
@property BOOL codeCoverageEnabled;
@property(copy) NSArray *commandLineArgumentEntries; // @dynamic commandLineArgumentEntries;
- (id)commandLineArgumentsForBuildParameters:(id)arg1;
@property(copy) NSString *debugAsWhichUser; // @synthesize debugAsWhichUser=_debugAsWhichUser;
@property(nonatomic) unsigned int debugProcessAsUID; // @synthesize debugProcessAsUID=_debugProcessAsUID;
- (void)disableTestsReferencedByTestableReference:(id)arg1;
- (BOOL)doesNonActionWork;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)effectiveBlueprintForOptimizationProfileGenerationForSchemeCommand:(id)arg1;
@property BOOL enableAddressSanitizer; // @synthesize enableAddressSanitizer=_enableAddressSanitizer;
@property BOOL enableThreadSanitizer; // @synthesize enableThreadSanitizer=_enableThreadSanitizer;
@property(copy) NSArray *environmentVariableEntries; // @dynamic environmentVariableEntries;
- (id)environmentVariablesForBuildParameters:(id)arg1;
@property(readonly) NSArray *hostBuildableReferences;
- (id)init;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (int)internalDebuggerToolchainSelectionMode;
- (BOOL)isTestEnabled:(id)arg1;
- (BOOL)isTestOrTestableEnabled:(id)arg1;
@property(readonly, getter=isTestable) BOOL testable;
- (BOOL)isTestableEnabled:(id)arg1;
@property BOOL mallocStackLoggingSelected; // @synthesize mallocStackLoggingSelected=_mallocStackLoggingSelected;
@property(readonly) NSMutableArray *mutableCommandLineArgumentEntries; // @dynamic mutableCommandLineArgumentEntries;
@property(readonly) NSMutableArray *mutableEnvironmentVariableEntries; // @dynamic mutableEnvironmentVariableEntries;
- (id)name;
- (BOOL)needsNewSchemeVersionForAppDataPackages;
- (BOOL)needsNewSchemeVersionForLocationSimulation;
- (void)primitiveInvalidate;
- (id)productTypesToIgnoreForSwiftDebuggerToolchain;
- (id)runnable;
@property(copy) NSString *selectedDebuggerIdentifier; // @synthesize selectedDebuggerIdentifier=_selectedDebuggerIdentifier;
@property(copy) NSString *selectedLauncherIdentifier; // @synthesize selectedLauncherIdentifier=_selectedLauncherIdentifier;
@property(copy) NSString *selectedMallocStackLoggingType; // @synthesize selectedMallocStackLoggingType=_selectedMallocStackLoggingType;
@property(copy) NSString *selectedMallocStackLoggingTypeTooltip; // @synthesize selectedMallocStackLoggingTypeTooltip=_selectedMallocStackLoggingTypeTooltip;
- (void)setBuildableReferenceToUseForMacroExpansion:(id)arg1;
- (void)setCodeCoverageEnabledFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setEnableAddressSanitizerFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setEnableThreadSanitizerFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setRunContext:(id)arg1;
@property(nonatomic) BOOL shouldUseLaunchSchemeArgsEnv; // @synthesize shouldUseLaunchSchemeArgsEnv=_shouldUseLaunchSchemeArgsEnv;
- (void)setShouldUseLaunchSchemeArgsEnvFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
- (void)setTestOrTestable:(id)arg1 enabled:(BOOL)arg2;
- (BOOL)shouldDebugAppExtensions;
- (BOOL)shouldDebugXPCServices;
- (id)subtitle;
@property(readonly) NSArray *testBuildableReferences;
- (id)testOperationWithSchemeOperationParameters:(id)arg1 testManager:(id)arg2 withBuildOperation:(id)arg3 buildParameters:(id)arg4 schemeCommand:(id)arg5 actionRecord:(id)arg6 testRunSpecifications:(id)arg7 outError:(id *)arg8 actionCallbackBlock:(CDUnknownBlockType)arg9;
- (void)testableDidChangeHost:(id)arg1;
- (id)workingDirectoryForBuildParameters:(id)arg1;

// Remaining properties
@property(readonly) NSMutableArray *mutableTestableReferences; // @dynamic mutableTestableReferences;
@property(copy) NSArray *testableReferences; // @dynamic testableReferences;

@end

