//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <IDEFoundation/DVTInvalidation-Protocol.h>
#import <IDEFoundation/DVTXMLUnarchiving-Protocol.h>

@class DVTNotificationToken, DVTStackBacktrace, DVTToolchain, IDEFileReference, IDEProfileOptimizationActionController, IDERunnable, IDEScheme, IDESchemeBuildableReference, NSArray, NSMutableArray, NSString;

@interface IDESchemeAction : NSObject <DVTXMLUnarchiving, DVTInvalidation>
{
    BOOL _hasAwoken;
    NSMutableArray *_prePhaseExecutionActions;
    NSMutableArray *_postPhaseExecutionActions;
    DVTNotificationToken *_buildSettingsDidChangeNotificationObservingToken;
    int _internalDebuggerToolchainSelectionMode;
    int _toolchainState;
    IDEScheme *_runContext;
    IDERunnable *_runnable;
    IDESchemeBuildableReference *_buildableReferenceToUseForMacroExpansion;
    NSString *_buildConfiguration;
    IDEFileReference *_notificationPayloadFile;
    IDEProfileOptimizationActionController *_pgoController;
    NSString *_selectedInternalDebuggerToolchainIdentifier;
    DVTToolchain *_lldbToolchain;
}

+ (BOOL)_addSanitizer:(unsigned long long)arg1 environmentVariables:(id)arg2 buildParameters:(id)arg3 buildable:(id)arg4 debugAppExtensions:(BOOL)arg5 debugging:(BOOL)arg6 testingSpecifier:(id)arg7 error:(id *)arg8;
+ (BOOL)addAddressSanitizerEnvironmentVariables:(id)arg1 buildParameters:(id)arg2 buildable:(id)arg3 debugAppExtensions:(BOOL)arg4 debugging:(BOOL)arg5 testingSpecifier:(id)arg6 error:(id *)arg7;
+ (BOOL)addThreadSanitizerEnvironmentVariables:(id)arg1 buildParameters:(id)arg2 buildable:(id)arg3 debugAppExtensions:(BOOL)arg4 debugging:(BOOL)arg5 testingSpecifier:(id)arg6 error:(id *)arg7;
+ (id)bundleIdentifierFromBuildableProduct:(id)arg1 withBuildParameters:(id)arg2;
+ (void)forceAddressSanitizerEnabledTo:(BOOL)arg1;
+ (void)forceThreadSanitizerEnabledTo:(BOOL)arg1;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingRunnable;
+ (BOOL)shouldAllowCustomPhaseActions;
- (void).cxx_destruct;
- (id)_buildProductToolchainIdentifiersForSchemeCommand:(id)arg1 foundBuildable:(id *)arg2;
@property(readonly) NSArray *_postPhaseExecutionActionsProxies;
@property(readonly) NSArray *_prePhaseExecutionActionsProxies;
- (void)_resetToolchainStatusHard:(BOOL)arg1;
- (id)absolutePathOfBuildSetting:(id)arg1 forSchemeCommand:(id)arg2;
- (void)addBuildableProductRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPathRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPostActions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addPreActions:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)addRemoteRunnable:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (BOOL)addressSanitizerEnabledForSchemeCommand:(id)arg1;
- (id)adjustedBuildParametersForMacroExpansionBuildableWithBaselineParamters:(id)arg1;
- (id)automaticSwiftLldbToolchainForSchemeCommand:(id)arg1 buildable:(id)arg2 performanceMetric:(id)arg3;
- (id)bestLLDBToolchainForSchemeCommand:(id)arg1 preferBuildProductToolchain:(BOOL)arg2;
@property(copy) NSString *buildConfiguration; // @synthesize buildConfiguration=_buildConfiguration;
@property(retain) IDESchemeBuildableReference *buildableReferenceToUseForMacroExpansion; // @synthesize buildableReferenceToUseForMacroExpansion=_buildableReferenceToUseForMacroExpansion;
- (id)bundleIdentifierWithRunnablePath:(id)arg1;
- (id)createAdditionalDiagnosticsDict;
@property(readonly, nonatomic) BOOL debugAppExtensions;
@property(readonly, copy) NSString *description;
@property(readonly) BOOL doesNonActionWork;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)expandMacrosInString:(id)arg1 forSchemeCommand:(id)arg2;
- (id)expandMacrosInString:(id)arg1 forSchemeCommand:(id)arg2 buildParameters:(id)arg3;
- (id)extensionInfosForExtensionBuildables:(id)arg1 schemeCommand:(id)arg2;
- (id)extensionInfosForExtensions:(id)arg1;
- (id)filePathsForContainersAndExtensionsForBuildParameters:(id)arg1 runnableProductType:(id)arg2 schemeCommand:(id)arg3;
@property(readonly) BOOL hasAwoken;
- (id)init;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)insertObject:(id)arg1 inPostPhaseExecutionActionsAtIndex:(unsigned long long)arg2;
- (void)insertObject:(id)arg1 inPrePhaseExecutionActionsAtIndex:(unsigned long long)arg2;
- (void)insertPostPhaseExecutionActions:(id)arg1 atIndexes:(id)arg2;
- (void)insertPrePhaseExecutionActions:(id)arg1 atIndexes:(id)arg2;
@property(nonatomic) int internalDebuggerToolchainSelectionMode; // @synthesize internalDebuggerToolchainSelectionMode=_internalDebuggerToolchainSelectionMode;
- (BOOL)isDeprecatedOption:(id)arg1;
@property(retain) DVTToolchain *lldbToolchain; // @synthesize lldbToolchain=_lldbToolchain;
- (BOOL)mallocStackLightAllowedForRunDestination:(id)arg1;
- (void)modifyEnvironmentForLogging:(id)arg1 buildParameters:(id)arg2;
@property(readonly) NSString *name;
@property(retain) IDEFileReference *notificationPayloadFile; // @synthesize notificationPayloadFile=_notificationPayloadFile;
@property(retain) IDEProfileOptimizationActionController *pgoController; // @synthesize pgoController=_pgoController;
- (void)primitiveInvalidate;
- (id)productTypesToIgnoreForSwiftDebuggerToolchain;
- (id)realAppNameForRunnablePath:(id)arg1;
- (void)removeObjectFromPostPhaseExecutionActionsAtIndex:(unsigned long long)arg1;
- (void)removeObjectFromPrePhaseExecutionActionsAtIndex:(unsigned long long)arg1;
- (void)removePostPhaseExecutionActionsAtIndexes:(id)arg1;
- (void)removePrePhaseExecutionActionsAtIndexes:(id)arg1;
- (void)replaceObjectInPostPhaseExecutionActionsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)replaceObjectInPrePhaseExecutionActionsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)replacePostPhaseExecutionActionsAtIndexes:(id)arg1 withPostPhaseExecutionActions:(id)arg2;
- (void)replacePrePhaseExecutionActionsAtIndexes:(id)arg1 withObjects:(id)arg2;
@property(readonly) IDEScheme *runContext; // @synthesize runContext=_runContext;
@property(retain, nonatomic) IDERunnable *runnable; // @synthesize runnable=_runnable;
- (BOOL)runnableUsesInternalSDK;
- (BOOL)sanitizersAllowedForSwiftVersionForSchemeCommand:(id)arg1;
- (void)schemeObjectGraphSetupComplete;
@property(retain) NSString *selectedInternalDebuggerToolchainIdentifier; // @synthesize selectedInternalDebuggerToolchainIdentifier=_selectedInternalDebuggerToolchainIdentifier;
- (void)setNotificationPayloadFileFromUTF8String:(char *)arg1 fromXMLUnarchiver:(id)arg2;
@property(copy) NSArray *postPhaseExecutionActions; // @dynamic postPhaseExecutionActions;
@property(copy) NSArray *prePhaseExecutionActions; // @dynamic prePhaseExecutionActions;
- (void)setRunContext:(id)arg1;
@property int toolchainState; // @synthesize toolchainState=_toolchainState;
- (id)setUpActionDependenciesForCorePhaseOperation:(id)arg1 shouldRunPostActionsBlock:(CDUnknownBlockType)arg2 prePhaseEnvironmentPopulationBlock:(CDUnknownBlockType)arg3 postPhaseEnvironmentPopulationBlock:(CDUnknownBlockType)arg4 buildParameters:(id)arg5 schemeActionResultOperation:(id)arg6 error:(id *)arg7;
- (void)setupObservers;
- (id)stringListForBuildSettings:(id)arg1 forSchemeCommand:(id)arg2;
- (id)stringListForBuildSettings:(id)arg1 forSchemeCommand:(id)arg2 buildable:(id)arg3;
@property(readonly) NSString *subtitle;
- (id)swiftLldbToolchainIDSForSchemeCommand:(id)arg1 buildable:(id)arg2 performanceMetric:(id)arg3;
- (id)swiftVersionOfRunnableForSchemeCommand:(id)arg1;
- (BOOL)threadSanitizerAllowedForRunDestination:(id)arg1;
- (BOOL)threadSanitizerEnabledForSchemeCommand:(id)arg1 runDestination:(id)arg2;
- (void)updateBuildableForChangeInRunnable;
- (void)updateExtensionInfosOfLaunchParmeters:(id)arg1;
- (void)updateSearchPathSettingsInEnvironment:(id)arg1 withBuildProducts:(id)arg2 runDestination:(id)arg3;
- (BOOL)useInternalDebuggerToolchainSelectionLogic;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSMutableArray *mutablePostPhaseExecutionActions; // @dynamic mutablePostPhaseExecutionActions;
@property(readonly) NSMutableArray *mutablePrePhaseExecutionActions; // @dynamic mutablePrePhaseExecutionActions;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

