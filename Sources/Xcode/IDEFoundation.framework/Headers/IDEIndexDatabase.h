//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class DVTDispatchLock, IDEIndexDBStringStorage, IDEIndexDatabaseQueryProvider, IDEIndexImporter, NSArray, NSDictionary, NSMapTable, NSMutableArray, NSMutableDictionary, NSURL;
@protocol IDEIndexDatabaseDelegate, IDEIndexQueryProvider;

@interface IDEIndexDatabase : NSObject
{
    NSURL *_fileURL;
    IDEIndexImporter *_importer;
    NSMutableArray *_dbConnections;
    DVTDispatchLock *_dbConnectionsLock;
    NSMutableDictionary *_rawKindForSymbolKind;
    NSMutableDictionary *_symbolKindForRawKind;
    NSDictionary *_rawLanguageForSymbolLanguage;
    NSDictionary *_symbolLanguageForRawLanguage;
    NSObject<IDEIndexDatabaseDelegate> *_delegate;
    IDEIndexDatabaseQueryProvider *_queryProvider;
    BOOL _readonly;
    BOOL _diagnosticMode;
    BOOL _enabledWAL;
    NSMutableArray *_errors;
    DVTDispatchLock *_dataLock;
    IDEIndexDBStringStorage *_directoryStringStorage;
    IDEIndexDBStringStorage *_filenameStringStorage;
    IDEIndexDBStringStorage *_moduleURLStringStorage;
    IDEIndexDBStringStorage *_spellingStringStorage;
    IDEIndexDBStringStorage *_resolutionStringStorage;
    IDEIndexDBStringStorage *_completionStringStorage;
    NSDictionary *_rootPathsTrie;
    NSMutableDictionary *_rootPathsCache;
    NSMapTable *_directoryPathsCache;
}

+ (id)auxTargetID;
+ (void)initialize;
+ (void)log:(id)arg1;
+ (void)logCritical:(id)arg1;
+ (void)logVerbose:(id)arg1;
+ (id)modulesTargetID;
+ (id)pchTargetID;
+ (void)reportException:(id)arg1;
+ (BOOL)verboseLogging;
- (void).cxx_destruct;
- (void)addKindsTableToConnection:(id)arg1;
- (id)auxiliaryFiles:(id)arg1 mainFile:(id)arg2;
- (char *)cStringAtOffset:(long long)arg1 inStorage:(id)arg2;
- (void)clearPCHFailures;
- (void)close;
- (char *)completionCStringAtOffset:(long long)arg1;
- (id)completionStringAtOffset:(long long)arg1;
@property(retain, nonatomic) NSObject<IDEIndexDatabaseDelegate> *delegate; // @synthesize delegate=_delegate;
- (void)didEndSession:(id)arg1;
- (void)didForgetFiles:(id)arg1;
- (void)didIndexHotFile;
- (void)didLoad;
- (void)didReportError;
- (void)didSave;
- (char *)directoryCStringAtOffset:(long long)arg1;
- (id)directoryStringAtOffset:(long long)arg1;
@property(readonly, nonatomic) BOOL enabledWAL; // @synthesize enabledWAL=_enabledWAL;
@property(readonly, nonatomic) NSArray *errors;
- (id)filePathForDirectoryAtOffset:(long long)arg1 fileAtOffset:(long long)arg2;
@property(copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (char *)filenameCStringAtOffset:(long long)arg1;
- (id)filenameStringAtOffset:(long long)arg1;
- (id)filesForMainFile:(id)arg1 target:(id)arg2;
- (id)filesForMainFile:(id)arg1 target:(id)arg2 followPCH:(BOOL)arg3;
- (void)findFilenameStringsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 lowercase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forEachResult:(CDUnknownBlockType)arg7;
- (void)findSpellingStringsContaining:(id)arg1 anchorStart:(BOOL)arg2 anchorEnd:(BOOL)arg3 subsequence:(BOOL)arg4 lowercase:(BOOL)arg5 cancelWhen:(CDUnknownBlockType)arg6 forEachResult:(CDUnknownBlockType)arg7;
- (void)findStringsContaining:(id)arg1 inStorage:(id)arg2 anchorStart:(BOOL)arg3 anchorEnd:(BOOL)arg4 subsequence:(BOOL)arg5 lowercase:(BOOL)arg6 cancelWhen:(CDUnknownBlockType)arg7 forEachResult:(CDUnknownBlockType)arg8;
@property(readonly, nonatomic) IDEIndexImporter *importer; // @synthesize importer=_importer;
- (id)initWithFileURL:(id)arg1;
- (BOOL)isKnownFile:(id)arg1 makeKnown:(BOOL)arg2;
- (BOOL)isProjectDirectory:(id)arg1;
- (BOOL)isProjectFile:(id)arg1;
- (id)mainFilesForFile:(id)arg1;
- (id)mainFilesForTarget:(id)arg1;
- (id)moduleURLAtOffset:(long long)arg1;
- (char *)moduleURLCStringAtOffset:(long long)arg1;
- (id)moduleURLStringAtOffset:(long long)arg1;
- (id)newBackgroundPriorityConnection;
- (id)newConnection;
- (id)newImportSession;
- (id)obtainQueryConnection:(id)arg1;
- (long long)offsetOfCompletionCString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfCompletionString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfDirectoryString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfFilenameString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfModuleURLString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfResolutionCString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfResolutionString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfSpellingCString:(const char *)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfSpellingString:(id)arg1 addIfMissing:(BOOL)arg2;
- (long long)offsetOfString:(id)arg1 inStorage:(id)arg2 addIfMissing:(BOOL)arg3;
- (void)open;
- (void)openInDiagnosticMode;
- (void)openReadonly;
- (void)openReadonly:(BOOL)arg1 diagnosticMode:(BOOL)arg2;
- (id)providersAndVersions;
- (void)purgeStaleData:(id)arg1;
@property(readonly, nonatomic) NSObject<IDEIndexQueryProvider> *queryProvider; // @synthesize queryProvider=_queryProvider;
- (long long)rawKindForSymbolKind:(id)arg1;
- (long long)rawLanguageForSymbolLanguage:(id)arg1;
- (id)rebuildProjectFiles:(id)arg1;
- (void)registerHotFile:(id)arg1;
- (void)registerSymbolKinds:(id)arg1;
- (void)registerSymbolLanguages:(id)arg1;
- (void)registerTarget:(id)arg1 byCaller:(id)arg2 outOfDateCallback:(CDUnknownBlockType)arg3;
- (void)releaseQueryConnection:(id)arg1;
- (void)reportAutoQueryProgress:(double)arg1;
- (void)reportError:(id)arg1;
- (void)reportErrorCode:(long long)arg1 description:(id)arg2 reason:(id)arg3;
- (char *)resolutionCStringAtOffset:(long long)arg1;
- (id)resolutionStringAtOffset:(long long)arg1;
- (void)saveStringStorage;
- (void)sendDelegateDidEndImportSession:(id)arg1;
- (void)sendDelegateDidForgetFiles:(id)arg1;
- (void)setRootPaths:(id)arg1;
- (char *)spellingCStringAtOffset:(long long)arg1;
- (id)spellingStringAtOffset:(long long)arg1;
- (BOOL)spliceChanges:(id)arg1 toMainFile:(id)arg2 target:(id)arg3;
- (id)stringAtOffset:(long long)arg1 inStorage:(id)arg2;
- (id)symbolDumpForFile:(id)arg1;
- (id)symbolKindForRawKind:(long long)arg1;
- (id)symbolLanguageForRawLanguage:(long long)arg1;
- (id)timestampForFile:(id)arg1;
- (void)unregisterTarget:(id)arg1 dirtyFiles:(id)arg2;
- (BOOL)updateProjectFiles:(id)arg1;

@end

