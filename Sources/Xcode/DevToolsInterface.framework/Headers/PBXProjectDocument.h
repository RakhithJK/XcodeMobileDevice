//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AppKit/NSDocument.h>

#import <DevToolsInterface/NSOpenSavePanelDelegate-Protocol.h>
#import <DevToolsInterface/PBXSelectionTarget-Protocol.h>

@class NSArray, NSMutableArray, NSMutableDictionary, NSString, PBXProject, PBXReference, PBXTrackableTaskManager, XCBreakpointsBucket, XCBuildOperation, XCIndexerProxy, XCLibraryChooser, XCProjectFindController, XCProjectSelection, XCRefactoring, XCSCMController, XCTaskListModule;

@interface PBXProjectDocument : NSDocument <PBXSelectionTarget, NSOpenSavePanelDelegate>
{
    PBXProject *_project;
    PBXReference *_projectReference;
    BOOL _isClosing;
    BOOL _willClose;
    BOOL _lastProjectSaveFailed;
    BOOL _lastUserSaveFailed;
    BOOL _isReverting;
    XCBuildOperation *_currentBuildOperation;
    XCBuildOperation *_previousBuildOperation;
    long long _postBuildAction;
    BOOL _haveShownForCurrentOperation;
    BOOL _hasShownIndexTemplateMismatchError;
    PBXTrackableTaskManager *_taskManager;
    NSMutableDictionary *_specifications;
    NSArray *_proxyObservers;
    NSMutableArray *_projectModulesCreated;
    XCSCMController *_scmController;
    XCProjectFindController *_projectFindController;
    XCIndexerProxy *_indexerProxy;
    XCTaskListModule *_taskListModule;
    XCBreakpointsBucket *_nonRetainedBreakpointsGroup;
    XCProjectSelection *_projectSelection;
    XCRefactoring *_refactoring;
    XCLibraryChooser *_libraryChooser;
}

+ (BOOL)_isFSObjectExchangingDesired;
+ (BOOL)_shouldUpgradeProjectAtPathWithoutPrompting:(id)arg1;
+ (void)addProjectPathToUpgradeWithoutPrompting:(id)arg1;
+ (id)documentWithProject:(id)arg1;
+ (id)findAllTemplates:(id)arg1;
+ (void)initialize;
+ (id)nativeType;
+ (void)saveUserBreakpoints;
+ (id)userBreakpointsGroup;
- (void)_addProjectToActivityViewer:(id)arg1;
- (void)_addReferenceToSCM:(id)arg1;
- (void)_appDidDeactivate:(id)arg1;
- (void)_buildResultsRestoreOperationDidStop:(id)arg1;
- (void)_buildStateNotification:(id)arg1;
- (BOOL)_checkDiskState;
- (void)_checkProjectDirty:(id)arg1;
- (void)_closeAndReopenProject;
- (void)_compositeSDKNotification:(id)arg1;
- (void)_confirmDeleteSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_defaultsLayoutChanged:(id)arg1;
- (id)_dirtyDocuments;
- (void)_displayRenameReferenceFailureMessage:(id)arg1;
- (void)_fileDidSave:(id)arg1;
- (void)_handleDocumentFileChanges:(id)arg1;
- (void)_handleProjectSave:(id)arg1;
- (void)_indexingException:(id)arg1;
- (void)_indexingTemplateMismatch:(id)arg1;
- (void)_primitiveClose;
- (void)_projectAddLibrariesSheetDidEnd:(id)arg1;
- (void)_projectChangedExternallySheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_projectCloseAnywayOrDontCloseSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (BOOL)_projectIsOpen:(id)arg1;
- (void)_projectNameChanged:(id)arg1;
- (void)_projectRevertOrSaveAnywaySheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_promptForSaveFailed:(int)arg1;
- (void)_promptForSaveFailedOnClose:(int)arg1;
- (void)_promptForSaveSuccessForProject:(BOOL)arg1 user:(BOOL)arg2;
- (void)_redindexProject;
- (void)_removeProjectFromActivityViewer;
- (void)_setProject:(id)arg1;
- (BOOL)_shouldAskForProjectRootForProject:(id)arg1 dirsToSkip:(id)arg2;
- (void)_startListeningToNotifications;
- (void)_targetOrConfigurationChanged:(id)arg1;
- (void)activateFromDockMenu:(id)arg1;
- (void)activateFromWindowMenu:(id)arg1;
- (void)addAssociatedProjectModule:(id)arg1;
- (void)addWindowController:(id)arg1;
- (void)cancelActiveTasks;
- (void)chooseLibrariesToAddToTarget:(id)arg1 group:(id)arg2;
- (void)close;
- (BOOL)closeWithSaveOptions:(unsigned long long)arg1;
- (id)currentBuildOperation;
- (void)dealloc;
- (void)deleteItems:(id)arg1;
- (id)destinationPath:(id)arg1 forSourcePath:(id)arg2 ofType:(id)arg3 forFileManager:(id)arg4;
- (void)dumpRemainingProjectModulesToConsole;
- (id)editedFileDocuments;
- (id)editedFileDocumentsFromReferredToProjects;
- (id)handleCloseScriptCommand:(id)arg1;
- (id)init;
- (id)initWithProject:(id)arg1;
- (BOOL)isActiveProjectDocument;
- (BOOL)isBuilding;
- (BOOL)isClosing;
- (BOOL)isDebugging;
- (BOOL)isRunning;
- (id)mainModule;
- (BOOL)mainModuleShouldClose:(id)arg1;
- (void)makeWindowControllers;
- (id)noteNewRecentDocumentKey;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)performAction:(id)arg1 withSelection:(id)arg2;
- (long long)postBuildAction;
- (id)previousBuildOperation;
- (id)printOperationWithSettings:(id)arg1 error:(id *)arg2;
- (id)project;
- (id)projectBreakpointGroup;
- (id)projectFindController;
- (id)projectSelection;
- (BOOL)readFromFile:(id)arg1 ofType:(id)arg2;
- (id)refactoring;
- (void)removeAssociatedProjectModule:(id)arg1;
- (void)removePerProjectTemplateState:(id)arg1;
- (void)removeReferenceFromSCM:(id)arg1;
- (void)renameReference:(id)arg1 to:(id)arg2 window:(id)arg3;
- (void)renamedFileAtPath:(id)arg1 to:(id)arg2 error:(id)arg3;
- (BOOL)reviewUnsavedDocumentsWithAlertTitle:(id)arg1 cancellable:(BOOL)arg2;
- (void)saveAllDirtyDocuments;
- (BOOL)saveEditedDocumentsIfNeededWithCancelTitle:(id)arg1;
- (BOOL)saveProjectIfNeeded;
- (id)scmController;
- (void)setCurrentBuildOperation:(id)arg1;
- (void)setPostBuildAction:(long long)arg1;
- (void)setSpecification:(id)arg1 forIdentifier:(id)arg2;
- (BOOL)shouldAskAboutDiskRemoval:(id)arg1;
- (BOOL)shouldAskAboutSCMRemovalOrRenaming:(id)arg1;
- (BOOL)shouldOpenProjectOfMismatchingVersion:(unsigned long long)arg1 atPath:(id)arg2;
- (BOOL)shouldOpenProjectReadOnlyAtPath:(id)arg1;
- (id)sourceControlManager;
- (id)specificationForIdentifier:(id)arg1;
- (id)taskManager;
- (id)templatesGroup;
- (void)unableToOpenProjectAtPath:(id)arg1 reason:(id)arg2;
- (id)userPerspectivesFileRef;
- (BOOL)willClose;
- (BOOL)writeToFile:(id)arg1 ofType:(id)arg2;
- (id)xxxtemplatesGroup;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

