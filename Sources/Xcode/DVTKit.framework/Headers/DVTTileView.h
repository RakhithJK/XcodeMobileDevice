//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AppKit/NSView.h>

#import <DVTKit/DVTFirstResponderShowingView-Protocol.h>
#import <DVTKit/NSAnimationDelegate-Protocol.h>

@class DVTFirstResponderDrawingStrategy, DVTNotificationToken, DVTTileViewItem, DVTTypeCompletionHandler, NSArray, NSColor, NSIndexSet, NSString, NSTextField;
@protocol DVTTileViewDelegate;

@interface DVTTileView : NSView <DVTFirstResponderShowingView, NSAnimationDelegate>
{
    CDStruct_8cfbf51b _appliedLayout;
    DVTTypeCompletionHandler *_typeCompletionHandler;
    NSArray *_content;
    NSIndexSet *_selectionIndexes;
    unsigned long long _minNumberOfRows;
    unsigned long long _maxNumberOfRows;
    unsigned long long _minNumberOfColumns;
    unsigned long long _maxNumberOfColumns;
    BOOL _superviewIsClipView;
    BOOL _gridParametersReadFromPrototype;
    BOOL _layingOut;
    NSArray *_tileViewItems;
    double _animationDuration;
    DVTFirstResponderDrawingStrategy *_firstResponderDrawingStrategy;
    int _emptyContentStringStyle;
    NSString *_emptyContentString;
    NSTextField *_emptyContentTextField;
    DVTNotificationToken *_superviewFrameChangeToken;
    BOOL _showsFirstResponder;
    BOOL _animates;
    BOOL _selectable;
    BOOL _allowsMultipleSelection;
    BOOL _avoidsEmptySelection;
    id _clickedContentObject;
    id <DVTTileViewDelegate> _delegate;
    DVTTileViewItem *_layoutItemPrototype;
    NSColor *_backgroundColor;
    struct CGSize _minGridSize;
    struct CGSize _maxGridSize;
}

+ (CDStruct_8cfbf51b)computeTargetGridGeometryForNumberOfItems:(long long)arg1 bounds:(struct CGRect)arg2 rowCountRange:(struct _NSRange)arg3 columnCountRange:(struct _NSRange)arg4 minGridSize:(struct CGSize)arg5 maxGridSize:(struct CGSize)arg6 sizeToFit:(BOOL)arg7 superview:(id)arg8 allowsResizingHorizontally:(BOOL)arg9 allowsResizingVertically:(BOOL)arg10;
- (void).cxx_destruct;
- (BOOL)_allowsResizingHorizontally;
- (BOOL)_allowsResizingVertically;
- (void)_applySelectionIndexes:(id)arg1 toItems:(id)arg2;
- (void)_applySelectionToItems:(id)arg1;
- (void)_contentChanged:(BOOL)arg1 regenerate:(BOOL)arg2;
- (void)_determineGridParametersFromItemPrototype;
- (struct CGRect)_frameRectForIndexInGrid:(unsigned long long)arg1 layout:(CDStruct_8cfbf51b)arg2;
- (void)_getRow:(unsigned long long *)arg1 column:(unsigned long long *)arg2 forPoint:(struct CGPoint)arg3 inLayout:(CDStruct_8cfbf51b)arg4;
- (id)_handleMouseEvent:(id)arg1 startingPoint:(struct CGPoint)arg2 commandKey:(BOOL)arg3 shiftKey:(BOOL)arg4 rubberband:(id)arg5;
- (void)_hideEmptyContentString;
- (unsigned long long)_indexForDecrementMove:(unsigned long long)arg1;
- (unsigned long long)_indexForIncrementMove:(unsigned long long)arg1;
- (unsigned long long)_indexForMoveDown;
- (unsigned long long)_indexForMoveLeft;
- (unsigned long long)_indexForMoveRight;
- (unsigned long long)_indexForMoveUp;
- (unsigned long long)_indexInAppliedGridForPoint:(struct CGPoint)arg1;
- (id)_indexSetInAppliedGridForRect:(struct CGRect)arg1 clippedToContent:(BOOL)arg2;
- (void)_init;
- (void)_layoutItemsAnimated:(BOOL)arg1;
- (struct CGPoint)_pointWithinBounds:(struct CGPoint)arg1;
- (id)_recursiveFindDefaultButtonCell;
- (void)_scrollSelectionToVisible;
- (void)_scrollToVisibleItemAtIndex:(unsigned long long)arg1;
- (void)_selectFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 scrollIndexToVisible:(unsigned long long)arg3;
- (void)_selectIndex:(unsigned long long)arg1 scrollToVisible:(BOOL)arg2;
- (void)_selectionStateChanged:(id)arg1;
- (void)_showEmptyContentString;
- (void)_superviewFrameChanged:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (id)accessibilityChildren;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityRole;
- (id)accessibilitySelectedChildren;
- (void)addSubviews:(id)arg1;
@property(nonatomic) BOOL allowsMultipleSelection; // @synthesize allowsMultipleSelection=_allowsMultipleSelection;
@property(nonatomic) BOOL animates; // @synthesize animates=_animates;
@property(nonatomic) BOOL avoidsEmptySelection; // @synthesize avoidsEmptySelection=_avoidsEmptySelection;
@property(copy, nonatomic) NSColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (BOOL)becomeFirstResponder;
- (void)cancelOperation:(id)arg1;
@property(readonly) id clickedContentObject; // @synthesize clickedContentObject=_clickedContentObject;
- (struct _NSRange)columnCountRange;
- (CDStruct_8cfbf51b)computeTargetGridGeometry;
@property(copy, nonatomic) NSArray *content;
@property(nonatomic) __weak id <DVTTileViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)didStopUsingTileViewItem:(id)arg1;
- (void)discardEditing;
@property(retain, nonatomic) NSString *emptyContentString; // @synthesize emptyContentString=_emptyContentString;
@property(nonatomic) int emptyContentStringStyle; // @synthesize emptyContentStringStyle=_emptyContentStringStyle;
- (void)encodeWithCoder:(id)arg1;
- (id)faultedViewsForRect:(struct CGRect)arg1;
- (void)gridGeometryChanged:(BOOL)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertText:(id)arg1;
- (BOOL)isFlipped;
@property(nonatomic, getter=isSelectable) BOOL selectable; // @synthesize selectable=_selectable;
- (id)itemForRepresentedObject:(id)arg1;
- (id)itemForView:(id)arg1;
- (void)keyDown:(id)arg1;
@property(retain, nonatomic) DVTTileViewItem *layoutItemPrototype; // @synthesize layoutItemPrototype=_layoutItemPrototype;
@property(nonatomic) struct CGSize maxGridSize; // @synthesize maxGridSize=_maxGridSize;
@property(nonatomic) unsigned long long maxNumberOfColumns; // @synthesize maxNumberOfColumns=_maxNumberOfColumns;
@property(nonatomic) unsigned long long maxNumberOfRows; // @synthesize maxNumberOfRows=_maxNumberOfRows;
@property(nonatomic) struct CGSize minGridSize; // @synthesize minGridSize=_minGridSize;
- (void)mouseDown:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (id)newTileViewItemForRepresentedObject:(id)arg1;
@property(readonly) unsigned long long numberOfColumns;
- (void)prepareContentInRect:(struct CGRect)arg1;
- (struct CGRect)rectForTileViewItemAtIndex:(long long)arg1;
- (BOOL)resignFirstResponder;
- (void)rightMouseDown:(id)arg1;
- (struct _NSRange)rowCountRange;
- (void)selectAll:(id)arg1;
@property(copy, nonatomic) NSIndexSet *selectionIndexes;
- (void)setAccessibilitySelectedChildren:(id)arg1;
- (void)setColumnCountRange:(struct _NSRange)arg1;
- (void)setContextClickedContentObject:(id)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setRowCountRange:(struct _NSRange)arg1;
- (void)setShowsFirstResponder:(BOOL)arg1;
@property(readonly) BOOL showsFirstResponder; // @synthesize showsFirstResponder=_showsFirstResponder;
- (void)tileViewDidStopUsingTileViewItem:(id)arg1;
@property(readonly) NSArray *tileViewItems; // @synthesize tileViewItems=_tileViewItems;
@property(readonly) NSArray *tiledViews;
- (id)typeCompletionHandler:(id)arg1 typeCompletionStringForObject:(id)arg2;
- (void)updateLayer;
- (void)validateSelectionIndexes;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewWillDraw;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)wantsUpdateLayer;
- (void)willStartUsingTileViewItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

