//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <DVTKit/DVTInvalidation-Protocol.h>

@class DVTStackBacktrace, NSAttributedString, NSMutableArray, NSString, NSTextAttachmentCell;

@interface DVTTextFold : NSObject <DVTInvalidation>
{
    struct _NSRange _relativeLocation;
    DVTTextFold *_parent;
    NSMutableArray *_children;
    unsigned long long _foldStyle;
    NSTextAttachmentCell *_attachmentCell;
    id _representedObject;
}

+ (Class)_inlineTokenAttachmentCellClass;
+ (Class)_markupViewAttachmentCellClass;
+ (id)decodeFold:(id)arg1 forParent:(id)arg2;
+ (id)foldsFromString:(id)arg1;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingDisplayString;
+ (id)keyPathsForValuesAffectingReplacementRange;
+ (id)keyPathsForValuesAffectingReplacementString;
- (void).cxx_destruct;
- (void)_addFoldsEnclosingRange:(struct _NSRange)arg1 toArray:(id)arg2;
- (id)_pList;
- (void)addChild:(id)arg1;
- (unsigned long long)addInFolds:(unsigned long long)arg1;
- (id)adjustFoldsForRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (id)allFoldsTouchingRange:(struct _NSRange)arg1;
@property(readonly) NSTextAttachmentCell *attachmentCell; // @synthesize attachmentCell=_attachmentCell;
- (id)blockFoldsTouchingRange:(struct _NSRange)arg1;
@property(readonly) NSMutableArray *children;
- (BOOL)deleteAsToken;
@property(readonly, copy) NSString *description;
@property(readonly) NSString *displayString;
- (void)enumerateDescendantsWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)findFoldContainingRange:(struct _NSRange)arg1;
- (id)findFoldWithRange:(struct _NSRange)arg1;
- (id)firstFoldTouchingCharacterIndex:(unsigned long long)arg1;
- (struct _NSRange)fixedSelectionRangeForRange:(struct _NSRange)arg1 affinity:(unsigned long long)arg2 inTextView:(id)arg3;
@property(readonly) unsigned long long foldStyle; // @synthesize foldStyle=_foldStyle;
@property(readonly) NSAttributedString *foldedIconString;
- (struct CGRect)foldingLayoutManager:(id)arg1 shouldUseBoundingRect:(struct CGRect)arg2 forGlyphRange:(struct _NSRange)arg3 inTextContainer:(id)arg4;
- (struct CGRect)foldingTypesetter:(id)arg1 shouldUseBoundingBox:(struct CGRect)arg2 forControlGlyphAtIndex:(unsigned long long)arg3 textContainer:(id)arg4 proposedLineFragment:(struct CGRect)arg5 glyphPosition:(struct CGPoint)arg6 characterIndex:(unsigned long long)arg7;
- (unsigned long long)foldingTypesetter:(id)arg1 shouldUseControlCharacterAction:(unsigned long long)arg2 remainingNominalParagraphRange:(struct _NSRange *)arg3 andParagraphSeparatorRange:(struct _NSRange *)arg4 charactarIndex:(unsigned long long)arg5 layoutManager:(id)arg6 string:(id)arg7;
- (id)foldsEnclosingRange:(struct _NSRange)arg1;
- (id)initWithRepresentedObject:(id)arg1 range:(struct _NSRange)arg2 style:(unsigned long long)arg3;
- (id)inlineFoldsTouchingRange:(struct _NSRange)arg1;
- (id)innerDescription:(id)arg1;
- (BOOL)isCharacterFoldedAtIndex:(unsigned long long)arg1;
- (id)lastFoldTouchingCharacterIndex:(unsigned long long)arg1;
@property(readonly) unsigned long long numberOfChildren;
- (void)offsetBy:(long long)arg1;
@property(retain) DVTTextFold *parent;
- (void)primitiveInvalidate;
@property struct _NSRange range;
- (BOOL)rangeIsInsideAFold:(struct _NSRange)arg1;
- (id)removeChildren:(id)arg1;
@property(readonly) struct _NSRange replacementRange;
@property(readonly) NSString *replacementString;
@property(retain) id representedObject; // @synthesize representedObject=_representedObject;
@property(readonly) NSString *stringValue;
- (unsigned long long)subtractOutFolds:(unsigned long long)arg1;
- (BOOL)validate;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

