//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 15 2018 10:31:50).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CoreAutomation/CAMDarwinTarget.h>

#import <CoreAutomation/CAMCommunicating-Protocol.h>
#import <CoreAutomation/CAMDarwinInterface-Protocol.h>
#import <CoreAutomation/CAMDeviceProxies-Protocol.h>

@class CAMAstris, CAMConnectionContainer, CAMCoreAutomationdConnection, CAMFTDIDevice, CAMMobileDeviceState, CAMSerialPort, CAMSyslogConnection, CAMUSBController, CAMXBSBuild, NSArray, NSCondition, NSData, NSDictionary, NSImage, NSMutableDictionary, NSNumber, NSRecursiveLock, NSString;
@protocol CAMAsyncDelegateProtocol;

@interface CAMEmbeddedDevice : CAMDarwinTarget <CAMCommunicating, CAMDeviceProxies, CAMDarwinInterface>
{
    NSCondition *instanceLock;
    NSString *_udid;
    NSString *_serialNumber;
    unsigned int _locationID;
    NSNumber *_ecid;
    NSMutableDictionary *propertyCache;
    NSDictionary *usbSerialNumberInfo;
    CAMMobileDeviceState *internalState;
    NSRecursiveLock *internalStateLock;
    CAMUSBController *usbController;
    CAMFTDIDevice *elementCableDevice;
    CAMSerialPort *serialPort;
    unsigned int lastValidLocationID;
    NSString *primateType;
    NSString *primateSerialNumber;
    NSString *serialPath;
    CAMAstris *astris;
    NSString *busmanSerial;
    NSNumber *busmanPort;
    NSMutableDictionary *proxyDictionary;
    int sleepCycleRequest;
    id _restorableConnectionAttachObserver;
    id _networkConnectionAttachObserver;
    id _networkConnectionDetachObserver;
    NSDictionary *_modelTrainMapping;
}

+ (id)_allAttachedDevices;
+ (id)allAttachedDevices;
+ (id)allDevices;
+ (id)allNetworkDevices;
+ (void)checkin:(id)arg1;
+ (id)checkout:(id)arg1;
+ (id)checkout:(id)arg1 usingBlockPredicate:(id)arg2 withDevices:(id)arg3;
+ (id)checkout:(id)arg1 withDevices:(id)arg2;
+ (BOOL)isSelectorExcludedFromWebScript:(SEL)arg1;
+ (id)restore:(id)arg1 withArrayOfBuilds:(id)arg2 usingArrayOfRestoreDocuments:(id)arg3 withArrayOfOptions:(id)arg4;
+ (id)restore:(id)arg1 withBuild:(id)arg2 usingRestoreDocument:(id)arg3 withOptions:(id)arg4;
+ (id)restoreIPSWs:(id)arg1 usingArrayOfIPSWs:(id)arg2 withArrayOfOptions:(id)arg3;
+ (int)runPlatformCommand:(id)arg1;
- (void).cxx_destruct;
- (id)AWDL;
- (id)CoreHAP;
- (id)HID;
- (id)VPN;
- (id)WiFi;
- (void)_findAMDNetworkConnection;
- (void)_findAMDRestorableConnection;
- (BOOL)_isEqualToRemoteDeviceForConnection:(id)arg1;
- (id)_rotateScreenshot:(id)arg1 withOrientation:(long long)arg2;
- (id)_voltagesInString:(id)arg1 usingFormatter:(CDUnknownBlockType)arg2;
- (id)accessibility;
- (void)activate;
- (BOOL)activateWithError:(id *)arg1;
@property(readonly, copy) NSData *activationPublicKey;
@property(readonly, nonatomic) __weak NSString *activationState;
@property(readonly, copy) NSNumber *activationStateAcknowledged;
- (void)addProvisioningProfile:(id)arg1;
- (id)addressBook;
- (id)appForName:(id)arg1;
- (id)appIconsForIdentifiers:(id)arg1;
- (id)archive;
- (id)assistant;
@property(retain) CAMAstris *astris; // @synthesize astris;
- (id)async;
- (void)attachUSBAndWaitForConnect:(BOOL)arg1;
@property(readonly) BOOL backupFromLockdown;
- (BOOL)backupFromLockdownUsingProgressBlock:(CDUnknownBlockType)arg1;
@property(readonly) BOOL backupFromNetwork;
- (BOOL)backupFromNetworkUsingProgressBlock:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSString *basebandBootloaderVersion;
@property(readonly, copy) NSData *basebandSerialNumber;
@property(readonly, copy) NSString *basebandStatus;
@property(readonly, copy) NSString *basebandVersion;
@property(readonly, copy) NSNumber *batteryID;
@property(readonly, copy) NSNumber *batteryLevel;
@property(readonly, copy) NSString *batteryState;
- (id)bluetooth;
@property(readonly, copy) NSString *bluetoothAddress;
@property(readonly, copy) NSString *boardID;
@property(copy) NSString *bootArgs;
@property(readonly, retain) CAMXBSBuild *build;
@property(readonly, copy) NSString *buildVersion;
@property(readonly, copy) NSNumber *busmanPort; // @synthesize busmanPort;
- (void)busmanSearch;
@property(readonly, copy) NSString *busmanSerial; // @synthesize busmanSerial;
- (id)c26;
@property(readonly, copy) NSNumber *callsInProgress;
@property(readonly) BOOL cancelBackupRestore;
- (id)capabilities;
@property(readonly, copy) NSNumber *carrierBuild;
@property(readonly, copy) NSString *carrierName;
@property(readonly, copy) NSNumber *carrierTechnology;
@property(readonly, copy) NSNumber *certificateProductionStatus;
@property(readonly, copy) NSNumber *certificateSecurityMode;
- (void)connect;
- (id)coreLocation;
- (id)coreMotion;
- (id)coreTelephony;
@property(readonly, copy) NSArray *coreVoltages;
@property(readonly) __weak CAMCoreAutomationdConnection *coreautomationdConnection;
@property(readonly, copy) NSString *cpuArchitecture;
- (void)deactivate;
- (void)dealloc;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)detachUSBAndWaitForDisconnect:(BOOL)arg1;
- (id)device;
@property(readonly, copy) NSString *deviceClass;
@property(readonly, copy) NSString *deviceColor;
@property(copy) NSString *deviceName;
@property(readonly, copy) NSDictionary *devicePropertyDictionary;
@property(readonly, copy) NSNumber *dieID;
- (void)disconnect;
@property(readonly, copy) NSNumber *diskCapacity;
- (BOOL)doesUsbDeviceMatch:(id)arg1;
@property(copy) NSNumber *ecid; // @synthesize ecid=_ecid;
@property(readonly, copy) NSNumber *effectiveProductionStatusAp;
@property(readonly, copy) NSNumber *effectiveProductionStatusSEP;
@property(readonly, copy) NSNumber *effectiveSecurityModeAp;
@property(readonly, copy) NSNumber *effectiveSecurityModeSEP;
@property(retain) CAMFTDIDevice *elementCableDevice; // @synthesize elementCableDevice;
- (void)executeCommand:(id)arg1;
- (id)externalAccessory;
- (id)faceTime;
- (BOOL)fileExistsAtPath:(id)arg1;
- (BOOL)fileExistsAtPath:(id)arg1 isDirectory:(char *)arg2;
- (void)findRegisteredStates;
- (id)gameController;
- (id)getAndRotateScreenshot;
- (id)getCachedPropertyNamed:(id)arg1 missBlock:(CDUnknownBlockType)arg2;
- (id)getInstalledApplications;
@property(readonly, copy, getter=getProvisioningProfiles) NSDictionary *provisioningProfiles;
@property(readonly, copy, getter=getScreenShot) NSImage *screenShot;
@property(readonly, copy, getter=getStarkScreenShot) NSImage *starkScreenShot;
- (void)getToDFU;
- (void)getToNMI;
- (void)getToOS;
- (void)getToiBoot;
- (id)graphicsUtilities;
@property(readonly, copy) NSString *hardwareModel;
@property(readonly) BOOL hasAWD;
@property(readonly) BOOL hasAWDL;
@property(readonly) BOOL hasAccelerometer;
@property(readonly) BOOL hasAirDrop;
@property(readonly) BOOL hasBaseband;
@property(readonly) BOOL hasBluetooth;
@property(readonly) BOOL hasBluetoothLowEnergy;
@property(readonly) BOOL hasCompass;
@property(readonly) BOOL hasFaceTime;
@property(readonly) BOOL hasGPS;
@property(readonly) BOOL hasGyro;
@property(readonly) BOOL hasLTE;
@property(readonly) BOOL hasLightningConnector;
@property(readonly) BOOL hasMesa;
@property(readonly) BOOL hasNFC;
@property(readonly) BOOL hasOscarSideband;
@property(readonly) BOOL hasSEP;
@property(readonly) BOOL hasSIM;
@property(readonly) BOOL hasSecureElement;
@property(readonly) BOOL hasTDSCDMA;
@property(readonly) BOOL hasWiFi;
@property(readonly) unsigned long long hash;
- (id)homekit;
@property(readonly, copy) NSNumber *hostAttached;
@property(readonly, copy) NSString *iBootVersion;
- (id)iCloud;
@property(readonly, copy) NSString *iccid;
@property(readonly, copy) NSString *identify;
- (id)identifyAndPlaySound:(BOOL)arg1;
- (id)ids;
@property(readonly, copy) NSString *imei;
@property(readonly, copy) NSString *imsi;
- (id)init;
- (id)initWithEcid:(id)arg1;
- (id)initWithEcid:(id)arg1 andWaitUntilPresent:(BOOL)arg2;
- (id)initWithEcid:(id)arg1 andWaitUntilPresent:(BOOL)arg2 withTimeout:(double)arg3;
- (id)initWithLocationID:(unsigned int)arg1;
- (id)initWithLocationID:(unsigned int)arg1 andWaitUntilPresent:(BOOL)arg2;
- (id)initWithLocationID:(unsigned int)arg1 andWaitUntilPresent:(BOOL)arg2 withTimeout:(double)arg3;
- (id)initWithSpecifiers:(id)arg1;
- (id)initWithSpecifiers:(id)arg1 andWaitUntilPresent:(BOOL)arg2;
- (id)initWithSpecifiers:(id)arg1 andWaitUntilPresent:(BOOL)arg2 withTimeout:(double)arg3;
- (id)initWithUDID:(id)arg1;
- (id)initWithUDID:(id)arg1 andWaitUntilPresent:(BOOL)arg2;
- (id)initWithUDID:(id)arg1 andWaitUntilPresent:(BOOL)arg2 withTimeout:(double)arg3;
- (void)installAppFromPath:(id)arg1;
- (void)installAppFromPath:(id)arg1 installType:(int)arg2;
- (BOOL)installCarrierBundle:(id)arg1;
- (id)installedApplicationsMatchingFilter:(id)arg1;
@property(retain) CAMMobileDeviceState *internalState; // @synthesize internalState;
@property(readonly, copy) NSString *inverseDeviceID;
- (id)ioregQueryForObject:(id)arg1 property:(id)arg2 swapEndianness:(BOOL)arg3;
@property(readonly, copy) NSNumber *iosdioManufacturerID;
@property(readonly, copy) NSNumber *iosdioProductID;
@property(readonly, nonatomic) BOOL isActivated;
@property(readonly) BOOL isAppleTV;
@property(readonly) BOOL isAppleWatch;
@property(readonly) BOOL isAttachedViaUSB;
@property(readonly, getter=isBasebandReady) BOOL basebandReady;
- (BOOL)isBooted;
- (BOOL)isBootedReady;
@property(readonly) BOOL isCDMA;
@property(readonly) BOOL isInDFU;
@property(readonly) BOOL isInIBoot;
@property(readonly, copy) NSNumber *isInternal;
@property(readonly, nonatomic) BOOL isPaired;
@property(readonly) BOOL isPresent;
@property(readonly) BOOL isResponsive;
@property(readonly) BOOL isTimedOut;
@property(readonly) BOOL isWatchCompanion;
- (void)jtagReset:(BOOL)arg1;
@property(readonly, copy) NSString *kernelType;
@property(readonly) BOOL lcmAutoboot;
@property(readonly) unsigned char lcmBacklightCalibration;
@property(readonly, copy) NSString *lcmBuild;
@property(readonly, copy) NSString *lcmDevice;
@property(readonly, copy) NSString *lcmNativeColor;
@property(readonly, copy) NSString *lcmRawPanelID;
@property(readonly, copy) NSString *lcmVendor;
- (id)localeUtilities;
@property unsigned int locationID; // @synthesize locationID=_locationID;
@property(readonly, copy) NSString *logPath;
- (void)logStatistics:(BOOL)arg1;
@property(readonly) BOOL makeRootMountWritable;
- (id)mc;
- (id)mediaLibrary;
- (id)mediaPlayer;
- (id)mediaRemote;
@property(readonly, copy) NSString *meid;
- (id)mesa;
@property(readonly, copy) NSString *mlbSerialNumber;
- (void)mobileDeviceAttached:(id)arg1;
- (void)mobileDeviceDetached:(id)arg1;
@property(readonly, copy) NSString *mobileSubscriberCountryCode;
@property(readonly, copy) NSString *mobileSubscriberNetworkCode;
@property(readonly, copy) NSString *modelNumber;
@property __weak NSDictionary *modelTrainMapping; // @synthesize modelTrainMapping=_modelTrainMapping;
@property(readonly, copy) NSString *nandCapacity;
- (id)nandInfo:(id)arg1;
@property(readonly, copy) NSString *nandType;
@property(readonly, copy) NSString *nandVendor;
@property(retain) id networkConnectionAttachObserver; // @synthesize networkConnectionAttachObserver=_networkConnectionAttachObserver;
@property(retain) id networkConnectionDetachObserver; // @synthesize networkConnectionDetachObserver=_networkConnectionDetachObserver;
- (id)networking;
- (id)nfc;
- (id)obliteration;
@property(readonly, copy) NSString *operatorName;
- (id)os;
- (void)pair;
@property(readonly, copy) NSString *partitionType;
- (id)passbook;
@property(readonly, copy) NSNumber *passwordProtected;
@property(readonly, copy) NSString *phoneNumber;
- (void)primateSearch;
@property(readonly, copy) NSString *primateSerialNumber; // @synthesize primateSerialNumber;
@property(readonly, copy) NSString *primateType; // @synthesize primateType;
@property(readonly, copy) NSString *productType;
@property(readonly, copy) NSString *productVersion;
@property(readonly, copy) NSNumber *productionSOC;
- (id)propertyCache;
@property(readonly, copy) NSString *protocolVersion;
@property(readonly, copy) NSNumber *ram;
- (void)reboot:(BOOL)arg1;
@property(readonly, copy) NSString *regionInfo;
- (void)registerDeviceNotifications;
@property(readonly, copy) NSString *releaseType;
- (BOOL)removeItemAtPath:(id)arg1;
- (void)removeProvisioningProfile:(id)arg1;
@property(retain) id restorableConnectionAttachObserver; // @synthesize restorableConnectionAttachObserver=_restorableConnectionAttachObserver;
- (BOOL)restore:(id)arg1;
- (void)restoreAsync:(id)arg1;
- (BOOL)restoreBuild:(CDUnknownBlockType)arg1;
- (BOOL)restoreBuild:(id)arg1 usingRestoreDocument:(id)arg2 withOptions:(id)arg3;
- (BOOL)restoreBuild:(id)arg1 usingRestoreDocument:(id)arg2 withOptions:(id)arg3 usingProgressBlock:(CDUnknownBlockType)arg4;
- (void)restoreBuildAsync:(id)arg1 usingRestoreDocument:(id)arg2 withOptions:(id)arg3;
- (BOOL)restoreBuildWithIPSW:(id)arg1 usingRestoreBundle:(long long)arg2 withOptions:(id)arg3;
- (BOOL)restoreBuildWithIPSW:(id)arg1 usingRestoreBundle:(long long)arg2 withOptions:(id)arg3 usingProgressBlock:(CDUnknownBlockType)arg4;
- (BOOL)restoreFromLockdownAndCopy:(BOOL)arg1 password:(id)arg2 waitForBoot:(BOOL)arg3;
- (BOOL)restoreFromNetworkAndCopy:(BOOL)arg1 password:(id)arg2 waitForBoot:(BOOL)arg3;
- (BOOL)restoreIPSW:(id)arg1 withOptions:(id)arg2;
- (BOOL)restoreIPSW:(id)arg1 withOptions:(id)arg2 usingProgressBlock:(CDUnknownBlockType)arg3;
- (void)restoreIPSWAsync:(id)arg1;
- (BOOL)restoreSourceFromLockdown:(id)arg1 copy:(BOOL)arg2 password:(id)arg3 waitForBoot:(BOOL)arg4;
- (BOOL)restoreSourceFromLockdown:(id)arg1 copy:(BOOL)arg2 password:(id)arg3 waitForBoot:(BOOL)arg4 usingProgressBlock:(CDUnknownBlockType)arg5;
- (BOOL)restoreSourceFromNetwork:(id)arg1 copy:(BOOL)arg2 password:(id)arg3 waitForBoot:(BOOL)arg4;
- (BOOL)restoreSourceFromNetwork:(id)arg1 copy:(BOOL)arg2 password:(id)arg3 waitForBoot:(BOOL)arg4 usingProgressBlock:(CDUnknownBlockType)arg5;
- (BOOL)retrieve:(id)arg1 toLocation:(id)arg2;
- (BOOL)retrieve:(id)arg1 toLocation:(id)arg2 resolvingSymlinks:(BOOL)arg3;
- (void)retrieveAsync:(id)arg1 toLocation:(id)arg2;
- (BOOL)retrieveSource:(id)arg1 toLocation:(id)arg2;
- (BOOL)retrieveSources:(id)arg1 toLocation:(id)arg2;
@property(readonly) __weak CAMCoreAutomationdConnection *rootCoreautomationdConnection;
- (BOOL)rsyncFromLocal:(id)arg1 toRemote:(id)arg2 options:(id)arg3;
- (BOOL)rsyncFromRemote:(id)arg1 toLocal:(id)arg2 options:(id)arg3;
- (id)runCommand:(id)arg1;
- (id)runCommand:(id)arg1 andWaitForResult:(BOOL)arg2;
- (id)runCommand:(id)arg1 andWaitForResult:(BOOL)arg2 asUser:(id)arg3 withTimeout:(double)arg4;
- (id)runScripter:(id)arg1 usingLibraryPaths:(id)arg2;
- (void)runiBootCommand:(id)arg1 waitForCompletion:(BOOL)arg2;
- (id)safari;
- (void)saveScreenShotToURL:(id)arg1;
@property(readonly, copy) NSNumber *sbLockdownEverRegisteredKey;
@property(readonly, copy) NSString *sdioProductInfo;
@property(readonly) __weak NSString *secureElementType;
- (BOOL)send:(id)arg1 toLocation:(id)arg2;
- (BOOL)send:(id)arg1 toLocation:(id)arg2 resolvingSymlinks:(BOOL)arg3;
- (void)sendAsync:(id)arg1 toLocation:(id)arg2;
@property(copy, nonatomic) NSString *serialNumber; // @synthesize serialNumber=_serialNumber;
@property(readonly, copy) NSString *serialPath; // @synthesize serialPath;
@property(retain) CAMSerialPort *serialPort; // @synthesize serialPort;
- (BOOL)setRestoreLogURL:(id)arg1 withType:(id)arg2;
@property int sleepCycleRequest; // @synthesize sleepCycleRequest;
- (void)setSystemDate:(id)arg1;
@property(copy) NSString *udid; // @synthesize udid=_udid;
@property(retain) CAMUSBController *usbController; // @synthesize usbController;
@property(retain, nonatomic) NSDictionary *usbSerialNumberInfo; // @synthesize usbSerialNumberInfo;
- (id)settings;
@property(readonly, copy) NSString *simStatus;
@property(readonly, copy) NSString *simTrayStatus;
- (id)simply;
- (id)simplyAsRoot;
- (id)simplyAsRoot:(BOOL)arg1;
@property(readonly, copy) NSString *socName;
@property(readonly, copy) NSString *socRevision;
@property(readonly, copy) NSString *socType;
@property(readonly, copy) NSString *softwareBundleVersion;
- (id)springboard;
- (id)store;
@property(readonly, copy) NSArray *supportedDeviceFamilies;
@property(readonly) BOOL supportsAppStore;
@property(readonly) BOOL supportsAssistant;
@property(readonly) BOOL supportsFaceTimeOverCellular;
@property(readonly) BOOL supportsTetheringOverCellular;
@property(readonly) BOOL supportsThumper;
@property(readonly, copy) NSNumber *supportsWiFi;
@property(readonly, copy) NSNumber *supportsWiFiSyncing;
- (BOOL)syncMediaAndABBundle:(id)arg1;
- (BOOL)syncMediaAndABBundle:(id)arg1 reboot:(BOOL)arg2;
@property(readonly) __weak CAMSyslogConnection *syslogConnection;
- (id)system;
- (id)systemDate;
@property(readonly, copy) NSNumber *telephonyCapability;
@property(readonly, copy) NSNumber *timeIntervalSince1970;
@property(readonly, copy) NSString *timeZone;
@property(readonly, copy) NSNumber *timeZoneOffsetFromUTC;
@property(readonly, copy) NSArray *trainSupport;
@property(readonly, copy) NSNumber *trustedHostAttached;
- (id)tu;
@property(readonly, copy) NSNumber *uiBuild;
- (void)uninstallAppWithId:(id)arg1;
@property(readonly, copy) NSNumber *uniqueChipID;
- (void)unlockedWaitForHereToNotHereToHereTransition;
- (BOOL)unlockedWaitUntilNotPresent;
- (BOOL)unlockedWaitUntilNotPresentWithTimeout:(double)arg1;
- (BOOL)unlockedWaitUntilPresent;
- (BOOL)unlockedWaitUntilPresentWithTimeout:(double)arg1;
- (void)unpair;
- (void)unregisterDeviceNotifications;
@property(readonly) BOOL useAMDNetworkConnection;
@property(readonly) BOOL useAMDRestorableConnection;
@property(readonly) BOOL useAsyncConnection;
@property(readonly, copy) NSNumber *uses24HourClock;
- (BOOL)waitForBasebandWithTimeout:(double)arg1;
@property(readonly) BOOL waitUntilNotPresent;
- (BOOL)waitUntilNotPresentWithTimeout:(double)arg1;
@property(readonly) BOOL waitUntilPresent;
- (BOOL)waitUntilPresentWithTimeout:(double)arg1;
@property(readonly, copy) NSString *wiFiAddress;
- (id)wp;
- (void)writeScreenShotToURL:(id)arg1;
- (void)writeStarkScreenShotToURL:(id)arg1;

// Remaining properties
@property id <CAMAsyncDelegateProtocol> asyncDelegate;
@property(readonly) BOOL checkout;
@property BOOL connected;
@property(retain) CAMConnectionContainer *connections;
@property(readonly, copy) NSString *hardwareModelPrefix;
@property(readonly, copy) NSString *hostname;
@property(copy) NSString *password;
@property(readonly) Class superclass;
@property(copy) NSString *targetAddress;
@property(copy) NSString *username;
@property(readonly, copy) NSArray *versionInformation;

@end

